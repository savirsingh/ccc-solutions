// code by savir singh
// 15/15 on CCC Grader, 50/50 on DMOJ

// auto-generated by cpide
// the ide built for competitive programming

//================================================================
// Name        : ccc12s4.cpp
// Author      : volcano
// Description : bitmask bfs question
//================================================================

#include <bits/stdc++.h>
using namespace std;
#define endl '\n'

const int MM = 1 << 21;
int n = -1;
bool vis[MM];

int bfs(int s, int e) {
    deque<int> deq; int ans = 0;
    deq.push_back(s);vis[s] = true;
    while (!deq.empty()) {
        int a = deq.size();
        while (a--) {
            int mask = deq.front(); deq.pop_front();
            if (mask == e) return ans;
            vector<int> res(10, -1);
            for (int i = n - 1; i >= 0; --i) {
                int cur = (mask >> 3 * i) & 7;
                res[cur] = i;
            }
            for (int i = 0; i < n; ++i) {
                if (res[i] == -1) continue;
                if (i != n - 1 && (res[i+1] == -1 || res[i] < res[i+1])) {
                    int newmask = (mask ^ (i << res[i] * 3)) | (i + 1 << res[i] * 3);
                    if (!vis[newmask]) {
                        vis[newmask] = true;deq.push_back(newmask);
                    }
                }
                if (i > 0 && (res[i-1] == -1 || res[i] < res[i-1])) {
                    int newmask = (mask ^ (i << res[i] * 3)) | (i - 1 << res[i] * 3);
                    if (!vis[newmask]) {
                        vis[newmask] = true;
                        deq.push_back(newmask);
                    }
                }
            }
        }
        ans++;
    }
    return -1;
}

int main() {
    ios::sync_with_stdio(false);cin.tie(nullptr);
    while (1) {
        cin >> n;if (!n) break;
        int s = 0, e = 0;
        memset(vis, false, sizeof vis);
        for (int i = 0; i < n; ++i) {
            int num;cin>>num;
            s |= i << (num -1) * 3;e |= i << i * 3;
        }
        int ans = bfs(s, e);
        if (ans != -1) cout << ans << endl;
        else cout << "IMPOSSIBLE\n";
    }
}
