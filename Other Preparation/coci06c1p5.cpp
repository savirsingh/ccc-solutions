// code by savir singh
// https://dmoj.ca/problem/coci06c1p5
// 200/200

// let's go!

// auto-generated by cpide
// the ide built for competitive programming

//================================================================
// Name        : coci06c1p5.cpp
// Author      : volcano
// Description : idk what to say rn lol
//================================================================

#include <bits/stdc++.h>
using namespace std;

const int MM = 20;
const int MMM = 1 << MM;

int N;
double prob[MM][MM], dp[MMM];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cin >> N;
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            cin >> prob[i][j];
            prob[i][j] /= 100.;
        }
    }
    dp[0] = 1.; // if bitmask is 0, we keep it the same
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            for (int bitmask = 0; bitmask < (1 << N); ++bitmask) {
                if (__builtin_popcount(bitmask) == i && !(bitmask & (1 << j))) {
                    dp[bitmask | (1 << j)] = max(dp[bitmask | (1 << j)], prob[i][j] * dp[bitmask]);
                }
            }
        }
    }
    // pls be enough precision
    cout << fixed << setprecision(10) << dp[(1 << N) - 1] * 100. << endl;
}
